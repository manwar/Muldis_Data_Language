=pod

=encoding utf8

=head1 NAME

Language::MuldisD::Core -
Muldis D core data types and operators

=head1 VERSION

This document is Language::MuldisD::Core version 0.19.1.

=head1 PREFACE

This document is part of the Muldis D language specification, whose root
document is L<Language::MuldisD>; you should read that root document
before you read this one, which provides subservient details.

That said, because this C<Core> document is otherwise too large to
comfortably fit in one file, it has been split into pieces and therefore
has its own tree of parts to follow, which it is the root of:
L<Language::MuldisD::Core::Types>,
L<Language::MuldisD::Core::Types_Catalog>,
L<Language::MuldisD::Core::Routines>,
L<Language::MuldisD::Core::Functions_Scalar>,
L<Language::MuldisD::Core::Functions_Nonscalar>.

=head1 DESCRIPTION

Muldis D has a mandatory core set of system-defined (eternally available)
entities, which is referred to as the I<Muldis D core> or the I<core>; they
are the minimal entities that all Muldis D implementations need to provide;
they are mutually self-describing and are used to bootstrap the language;
any entities outside the core, called I<Muldis D extensions>, are
non-mandatory and are defined in terms of the core or each other, but the
reverse isn't true.

This current C<Core> document features the boolean, integer, rational, bit
string, and character string types and operators, plus the tuple and
relation type constructors (and quasi- variants) and operators, plus the
type system minimal and maximal types, plus the special types used to
define the system catalog, and the polymorphic operators that all types, or
some types including core types, have defined over them.

(Technically speaking, not all of the core types or operators are necessary
for bootstrapping the language.  In fact, any or all of the rationals, bit
strings, and general character strings can be excised from minimalist
implementations, and the language fundamentals would still work with just
the booleans, integers, tuples, relations, and special catalog types, which
include the entity-name-specific character string types.  But said
excisables are strongly recommended for universal support because they are
very frequently useful in practice, and they are not any more complicated.)

Extensions are in these other documents:
L<Language::MuldisD::Ext::Temporal>, L<Language::MuldisD::Ext::Spatial>.

=head1 SEE ALSO

Go to L<Language::MuldisD> for the majority of distribution-internal
references, and L<Language::MuldisD::SeeAlso> for the majority of
distribution-external references.

=head1 AUTHOR

Darren Duncan (C<perl@DarrenDuncan.net>)

=head1 LICENSE AND COPYRIGHT

This file is part of the formal specification of the Muldis D language.

Muldis D is Copyright Â© 2002-2008, Darren Duncan.

See the LICENSE AND COPYRIGHT of L<Language::MuldisD> for details.

=head1 ACKNOWLEDGEMENTS

The ACKNOWLEDGEMENTS in L<Language::MuldisD> apply to this file too.

=cut
