                                 Muldis::D
                                   TODO
---------------------------------------------------------------------------

Following is a summary of things that still need doing.  It is specific to
the Muldis D specification distribution only, and doesn't talk about things
that would go in other distributions, including implementations.  (But,
look at lib/Muldis/D/SeeAlso.pod for a list of actual or possible
implementations.)

The following list is loosely ordered by priority, but list items may
actually be addressed in a different order.  There is no specific time
table for these items; they are simply to be done "as soon as possible".

The following list generally contains only TODO items that are considered
well-defined and imminent.

This TODO file also used to contain a large amount of brainstorming, some
verbose, in the guise of TODO items, but much of that was highly unlikely
to be done without major changes, and in any event it was considered
inappropriate for release distributions due at least to its great rate of
growth and low signal to noise; and so, that content is now in a different
file instead, TODO_DRAFT, and this file only exists in the Muldis D version
control repository, not in the packaged Muldis D distributions on CPAN, so
interested parties can go to the version control to read it.

* Generally speaking, make a new release to CPAN once every week, assuming
the progress is non-trivial, so there are regular public snapshots with
nicely rendered documentation.

----------

* Only when the Muldis::D distribution catches up with the state of the art
as canonically defined by Muldis::D::RefEng, jump its version number ahead
to 0.2xx.0 to match the latter.  Until then, any Muldis::D releases will
have 0.1xx.y version numbers as it does now while catching up piecemeal.

* Update the development status of the Muldis D language spec to "alpha"
from "pre-alpha" (but don't set the version
to 1.0.0 yet) only when the Muldis::D::RefEng - Reference Implementation
of Muldis D Over Perl 5 has fully implemented the language
core, or a significant and computationally complete working subset thereof,
and so the language spec is then considered sufficiently complete with
corner cases exposed; Muldis::D::RefEng would also be updated to "alpha"
status et al simultaneously.  There are no other preconditions to consider
either project "alpha" status.  Curr est early-mid 2013 for this.

* Preconditions for considering the Muldis D language spec to be either
"beta" or "released" status or "1.0" incl:  A significant, computationally
complete working core or subset thereof as a Parrot hosted language, a
TAP speaking test suite with significant feature coverage, a serious level
of post-alpha-status design input solicited of other interested parties,
implementations over multiple SQL DBMSs.  Curr est late 2013.

----------

* Replace this with condensed extractions from TODO_DRAFT.

----------

* Whatever else needs doing, such as, fixing bugs.
